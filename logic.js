// Base de datos de preguntas reorganizada para 20 secciones individuales
const todasLasPreguntas = [
  // FUNDACI√ìN - 5 preguntas (amarillo #D1BA30)
  { id: 0, empresa: 'fundacion', color: '#D1BA30', logo: '/media/Logo-Fundacion.png', pregunta: "¬øHace cuantos a√±os se fund√≥ la Fundaci√≥n Guaicaramo?", opciones: ["12 A√ëOS", "15 A√ëOS", "8 A√ëOS"], respuestaCorrecta: 0 },
  { id: 1, empresa: 'dao', color: '#2D753E', logo: '/media/Logo-DAO.png', pregunta: "¬øHace cuantos a√±os se fund√≥ Del Llano Alto Oleico - DAO?", opciones: ["12 A√ëOS", "10 A√ëOS", "8 A√ëOS"], respuestaCorrecta: 1 },
  { id: 2, empresa: 'sirius', color: '#00A3FF', logo: '/media/Logo-Sirius.png', pregunta: "¬øCu√°l es la principal biomasa que utiliza Sirius Regenerative para producir biochar?", opciones: ["Cascarilla de palma africana", "C√°scara de arroz", "Bagazo de ca√±a"], respuestaCorrecta: 0 },
  { id: 3, empresa: 'guaicaramo', color: '#D97523', logo: '/media/logo-Guaicaramo.png', pregunta: "Durante los √∫ltimos 4 a√±os, Do√±a Pepa ha tenido un prop√≥sito principal. ¬øCu√°l ha sido?", opciones: ["La productividad", "El buen trato", "La disciplina", "El orden y aseo"], respuestaCorrecta: 1 },
  { id: 4, empresa: 'fundacion', color: '#D1BA30', logo: '/media/Logo-Fundacion.png', pregunta: "¬øCu√°ntas personas se han visto beneficiadas en las zonas de influencia?", opciones: ["+ 5.000 beneficiados", "+ 10.000 beneficiados", "No ha habido beneficiados"], respuestaCorrecta: 1 },
  
  { id: 5, empresa: 'dao', color: '#2D753E', logo: '/media/Logo-DAO.png', pregunta: "¬øQu√© tipo de Aceite de fruto de Palma comercializamos?", opciones: ["Aceite de fruto de palma convencional", "Aceite de fruto de Palma Alto Oleico", "Aceite de Aguacate"], respuestaCorrecta: 1 },
  { id: 6, empresa: 'sirius', color: '#00A3FF', logo: '/media/Logo-Sirius.png', pregunta: "¬øCu√°l de los siguientes productos hace parte del portafolio de Sirius Regenerative?", opciones: ["Biochar Blend", "Sirius Bacter (biol√≥gico)", "Todas las anteriores"], respuestaCorrecta: 2 },
  { id: 7, empresa: 'guaicaramo', color: '#D97523', logo: '/media/logo-Guaicaramo.png', pregunta: "Generamos alianzas con empresas del sector para proteger y conservar al:", opciones: ["Oso palmero", "Chig√ºiro", "Venado", "Jaguar"], respuestaCorrecta: 0 },
  { id: 8, empresa: 'fundacion', color: '#D1BA30', logo: '/media/Logo-Fundacion.png', pregunta: "¬øCu√°ntos son los municipios impactados por la labor realizada por la fundaci√≥n Guaicaramo?", opciones: ["32 Municipios", "4 Municipios", "12 Municipios"], respuestaCorrecta: 1 },
  { id: 9, empresa: 'dao', color: '#2D753E', logo: '/media/Logo-DAO.png', pregunta: "¬øD√≥nde est√°n ubicadas nuestras plantaciones aliadas?", opciones: ["Mani ‚Äì Casanare", "Bogot√° ‚Äì Cundinamarca", "Barranca de Up√≠a ‚Äì Meta"], respuestaCorrecta: 2 },
  
  { id: 10, empresa: 'sirius', color: '#00A3FF', logo: '/media/Logo-Sirius.png', pregunta: "¬øEn cu√°ntas hect√°reas ha trabajado Sirius con aplicaciones de biochar y bioinsumos?", opciones: ["M√°s de 6.000 hect√°reas", "M√°s de 10.000 hect√°reas", "M√°s de 13.000 hect√°reas"], respuestaCorrecta: 0 },
  { id: 11, empresa: 'guaicaramo', color: '#D97523', logo: '/media/logo-Guaicaramo.png', pregunta: "En este Congreso estamos lanzando el libro titulado:", opciones: ["La expedici√≥n de Do√±a Pepa", "Los caminos del oso palmero", "Las aventuras de Do√±a Pepa", "El viaje del chig√ºiro"], respuestaCorrecta: 2 },
  { id: 12, empresa: 'fundacion', color: '#D1BA30', logo: '/media/Logo-Fundacion.png', pregunta: "¬øHasta que a√±o se est√° desarrollando todo el plan educativo de la Fundaci√≥n Guaicaramo?", opciones: ["2026", "2030", "2032"], respuestaCorrecta: 2 },
  { id: 13, empresa: 'dao', color: '#2D753E', logo: '/media/Logo-DAO.png', pregunta: "¬øCu√°les de los siguientes son productos con semilla?", opciones: ["Canola, Girasol y Soya", "Aguacate, Oliva y Palma Alto Oleico", "Ninguna de las anteriores"], respuestaCorrecta: 0 },
  { id: 14, empresa: 'sirius', color: '#00A3FF', logo: '/media/Logo-Sirius.png', pregunta: "¬øCu√°l es el principal beneficio del biochar producido por Sirius Regenerative?", opciones: ["Control de malezas", "Captura y almacenamiento de carbono en el suelo", "Transformaci√≥n de biomasa, fertilizaci√≥n y remoci√≥n de carbono de la atm√≥sfera"], respuestaCorrecta: 1 },
  
  { id: 15, empresa: 'guaicaramo', color: '#D97523', logo: '/media/logo-Guaicaramo.png', pregunta: "¬øQu√© tipo de proyecto sostenible implementado en Guaicaramo ayuda a mejorar la calidad de las aguas residuales?", opciones: ["Reciclaje", "Humedales artificiales", "Siembra de √°rboles", "Compostaje"], respuestaCorrecta: 1 },
  { id: 16, empresa: 'fundacion', color: '#D1BA30', logo: '/media/Logo-Fundacion.png', pregunta: "¬øCu√°l es el principal objetivo de la Fundaci√≥n Guaicaramo?", opciones: ["Mitigar necesidades b√°sicas insatisfechas en Educaci√≥n de la primera infancia", "Dar apoyo en gesti√≥n social en los territorios", "Todas las anteriores"], respuestaCorrecta: 2 },
  { id: 17, empresa: 'dao', color: '#2D753E', logo: '/media/Logo-DAO.png', pregunta: "¬øQu√© certificaciones respaldan el compromiso de DAO con la sostenibilidad?", opciones: ["RSPO, Cero Deforestaci√≥n, APSColombia", "ISCC, EUDR, Seedless Oils", "Todas las anteriores"], respuestaCorrecta: 2 },
  { id: 18, empresa: 'sirius', color: '#00A3FF', logo: '/media/Logo-Sirius.png', pregunta: "¬øC√≥mo se llama el proceso por medio del cual se transforman biomasas en biochar?", opciones: ["Pirolisis", "Compostaje", "Fermentaci√≥n anaerobia"], respuestaCorrecta: 0 },
  { id: 19, empresa: 'guaicaramo', color: '#D97523', logo: '/media/logo-Guaicaramo.png', pregunta: "En el tratamiento de aguas residuales, logramos obtener un recurso energ√©tico. ¬øCu√°l es?", opciones: ["Carb√≥n", "Gasolina", "Di√©sel", "Biog√°s"], respuestaCorrecta: 3 }
];

// Variables globales
let puntuacion = 0;
let preguntaActual = null;
let girando = false;
let juegoIniciado = false;
let tirosRestantes = 5;
let respuestasCorrectas = 0;
let respuestasIncorrectas = 0;
let preguntasUsadas = [];
let juegoTerminado = false;
let preguntasDisponibles = [...todasLasPreguntas];
let rotacionAcumulada = 0;

// Funci√≥n para mostrar modal personalizado
function mostrarModalPersonalizado(icono, titulo, mensaje) {
  document.getElementById('alert-icon').textContent = icono;
  document.getElementById('alert-title').textContent = titulo;
  document.getElementById('alert-message').textContent = mensaje;
  document.getElementById('alert-modal').classList.add('show');
}

// Funci√≥n para mostrar modal con auto-cierre
function mostrarModalConAutoCierre(icono, titulo, mensaje, tiempo = 2000) {
  document.getElementById('alert-icon').textContent = icono;
  document.getElementById('alert-title').textContent = titulo;
  document.getElementById('alert-message').textContent = mensaje;
  document.getElementById('alert-modal').classList.add('show');
  
  // Auto-cerrar despu√©s del tiempo especificado
  setTimeout(() => {
    cerrarModalAlerta();
  }, tiempo);
}

// Funci√≥n para cerrar modal de alerta
function cerrarModalAlerta() {
  document.getElementById('alert-modal').classList.remove('show');
}

// Funci√≥n para iniciar el juego
function iniciarJuego() {
  juegoIniciado = true;
  juegoTerminado = false;
  tirosRestantes = 5;
  respuestasCorrectas = 0;
  respuestasIncorrectas = 0;
  puntuacion = 0;
  rotacionAcumulada = 0;
  
  // Resetear preguntas usadas y disponibles
  preguntasUsadas = [];
  preguntasDisponibles = [...todasLasPreguntas];
  
  // Cambiar botones INMEDIATAMENTE
  document.getElementById('spin-btn').style.display = 'none';
  document.getElementById('girar-btn').style.display = 'block';
  
  // Actualizar contadores
  actualizarContadores();
  actualizarPuntuacion();
  actualizarRuleta();
  
  // Resetear posici√≥n de la ruleta
  const wheel = document.getElementById('wheel');
  wheel.style.transform = 'rotate(0deg)';
  
  console.log('üéÆ Juego iniciado correctamente');
}

// Funci√≥n para actualizar la ruleta din√°micamente
function actualizarRuleta() {
  const wheel = document.getElementById('wheel');
  
  // Calcular √°ngulo por secci√≥n
  const numSecciones = preguntasDisponibles.length;
  const anguloPorSeccion = 360 / numSecciones;
  
  // Generar gradiente c√≥nico din√°mico
  let gradientStops = [];
  let currentAngle = 0;
  
  preguntasDisponibles.forEach((pregunta, index) => {
    const nextAngle = currentAngle + anguloPorSeccion;
    gradientStops.push(`${pregunta.color} ${currentAngle}deg ${nextAngle}deg`);
    currentAngle = nextAngle;
  });
  
  const conicGradient = `conic-gradient(${gradientStops.join(', ')})`;
  wheel.style.background = conicGradient;
}

// Funci√≥n para actualizar contadores
function actualizarContadores() {
  document.getElementById('correctas-count').textContent = respuestasCorrectas;
  document.getElementById('incorrectas-count').textContent = respuestasIncorrectas;
  document.getElementById('tiros-count').textContent = tirosRestantes;
}

// Funci√≥n para girar la ruleta
function girarRuleta() {
  if (girando || !juegoIniciado || tirosRestantes <= 0 || juegoTerminado || preguntasDisponibles.length === 0) return;
  
  girando = true;
  const girarBtn = document.getElementById('girar-btn');
  const wheel = document.getElementById('wheel');
  
  // Deshabilitar bot√≥n
  girarBtn.disabled = true;
  girarBtn.textContent = 'üå™ GIRANDO...';
  
  // Calcular rotaci√≥n fuerte y consistente para cada giro
  const vueltas = Math.floor(Math.random() * 3) + 6; // 6-8 vueltas (m√°s vueltas)
  const anguloExtra = Math.floor(Math.random() * 360);
  const nuevaRotacion = (vueltas * 360) + anguloExtra;
  
  // Sumar a la rotaci√≥n acumulada para evitar giros hacia atr√°s
  rotacionAcumulada += nuevaRotacion;
  
  // Aplicar la rotaci√≥n acumulada total
  wheel.style.transform = `rotate(${rotacionAcumulada}deg)`;
  
  // Calcular pregunta ganadora basada solo en el √°ngulo extra (no en la rotaci√≥n total)
  const numSecciones = preguntasDisponibles.length;
  const anguloPorSeccion = 360 / numSecciones;
  const anguloNormalizado = (360 - (anguloExtra % 360)) % 360;
  const segmento = Math.floor(anguloNormalizado / anguloPorSeccion);
  const preguntaGanadora = preguntasDisponibles[segmento];
  
  // Esperar que termine la animaci√≥n (mismo tiempo para consistencia)
  setTimeout(() => {
    girando = false;
    tirosRestantes--;
    actualizarContadores();
    
    if (tirosRestantes > 0 && preguntasDisponibles.length > 1) {
      girarBtn.disabled = false;
      girarBtn.textContent = 'üéØ ¬°GIRAR RULETA!';
    } else {
      juegoTerminado = true;
      girarBtn.disabled = true;
      girarBtn.textContent = 'üèÅ JUEGO TERMINADO';
    }
    
    // Mostrar pregunta
    mostrarPregunta(preguntaGanadora);
  }, 4000); // Tiempo consistente de 4 segundos
}

// Funci√≥n para mostrar pregunta
function mostrarPregunta(preguntaSeleccionada) {
  preguntaActual = preguntaSeleccionada;
  
  // Marcar pregunta como usada
  preguntasUsadas.push(preguntaSeleccionada.id);
  
  // Actualizar logo seg√∫n la empresa
  const logoElement = document.querySelector('.question-logo');
  logoElement.src = preguntaSeleccionada.logo;
  logoElement.alt = `Logo ${preguntaSeleccionada.empresa}`;
  
  // Llenar modal con informaci√≥n de la pregunta
  const empresaTitulos = {
    'fundacion': 'FUNDACI√ìN GUAICARAMO',
    'dao': 'DEL LLANO ALTO OLEICO ‚Äì DAO',
    'sirius': 'SIRIUS REGENERATIVE',
    'guaicaramo': 'GUAICARAMO'
  };
  
  document.getElementById('category-title').textContent = empresaTitulos[preguntaSeleccionada.empresa];
  document.getElementById('question-text').textContent = preguntaSeleccionada.pregunta;
  
  // Crear opciones
  const optionsContainer = document.getElementById('options-container');
  optionsContainer.innerHTML = '';
  
  preguntaSeleccionada.opciones.forEach((opcion, index) => {
    const button = document.createElement('button');
    button.className = 'option-btn';
    button.textContent = opcion;
    button.onclick = () => verificarRespuesta(index);
    optionsContainer.appendChild(button);
  });
  
  // Mostrar modal
  document.getElementById('question-modal').classList.add('show');
  
  // Limpiar resultados anteriores
  document.getElementById('result-message').style.display = 'none';
  document.getElementById('close-btn').style.display = 'none';
}

// Funci√≥n para verificar respuesta
function verificarRespuesta(indiceSeleccionado) {
  if (!preguntaActual) return;
  
  const esCorrecta = indiceSeleccionado === preguntaActual.respuestaCorrecta;
  const resultMessage = document.getElementById('result-message');
  const closeBtn = document.getElementById('close-btn');
  
  // Deshabilitar botones
  const opciones = document.querySelectorAll('.option-btn');
  opciones.forEach((btn, index) => {
    btn.onclick = null;
    if (index === preguntaActual.respuestaCorrecta) {
      btn.classList.add('correct');
    } else if (index === indiceSeleccionado && !esCorrecta) {
      btn.classList.add('incorrect');
    }
  });
  
  // Mostrar resultado
  if (esCorrecta) {
    puntuacion += 10;
    respuestasCorrectas++;
    resultMessage.textContent = 'üéâ ¬°Correcto! +10 puntos';
    resultMessage.className = 'result-message result-correct';
    actualizarPuntuacion();
    actualizarContadores();
  } else {
    respuestasIncorrectas++;
    const respuestaCorrecta = preguntaActual.opciones[preguntaActual.respuestaCorrecta];
    resultMessage.textContent = `‚ùå Incorrecto. La respuesta correcta era: ${respuestaCorrecta}`;
    resultMessage.className = 'result-message result-incorrect';
    actualizarContadores();
  }
  
  resultMessage.style.display = 'block';
  closeBtn.style.display = 'inline-block';
}

// Funci√≥n para cerrar pregunta
function cerrarPregunta() {
  document.getElementById('question-modal').classList.remove('show');
  
  // Eliminar la pregunta respondida de las disponibles
  preguntasDisponibles = preguntasDisponibles.filter(p => p.id !== preguntaActual.id);
  
  // Actualizar ruleta despu√©s de responder (solo colores, sin logos)
  if (preguntasDisponibles.length > 0) {
    actualizarRuleta();
  }
  
  preguntaActual = null;
  
  // Si el juego termin√≥, mostrar resultado final
  if (juegoTerminado || preguntasDisponibles.length === 0) {
    setTimeout(() => {
      mostrarResultadoFinal();
    }, 500);
  }
}

// Funci√≥n para actualizar puntuaci√≥n
function actualizarPuntuacion() {
  document.getElementById('score-display').textContent = `üèÜ Puntuaci√≥n: ${puntuacion}`;
}

// Funci√≥n para mostrar resultado final
function mostrarResultadoFinal() {
  const porcentaje = Math.round((respuestasCorrectas / 5) * 100);
  let emoji = '';
  let titulo = '';
  
  if (respuestasCorrectas >= 4) {
    emoji = 'üèÜ';
    titulo = '¬°EXCELENTE!';
  } else if (respuestasCorrectas >= 3) {
    emoji = 'üéâ';
    titulo = '¬°MUY BIEN!';
  } else {
    emoji = 'üí™';
    titulo = '¬°SIGUE INTENTANDO!';
  }
  
  // Actualizar modal de resultado
  document.getElementById('result-icon').textContent = emoji;
  document.getElementById('result-title').textContent = titulo;
  
  const statsHTML = `
    <p><strong>Respuestas Correctas:</strong> ${respuestasCorrectas}/5</p>
    <p><strong>Respuestas Incorrectas:</strong> ${respuestasIncorrectas}/5</p>
    <p class="percentage"><strong>Porcentaje de Acierto:</strong> ${porcentaje}%</p>
    <p class="score"><strong>Puntuaci√≥n Final:</strong> ${puntuacion} puntos</p>
  `;
  
  document.getElementById('result-stats').innerHTML = statsHTML;
  document.getElementById('result-modal').classList.add('show');
}

// Funci√≥n para cerrar resultado final y reiniciar autom√°ticamente
function cerrarResultadoFinal() {
  document.getElementById('result-modal').classList.remove('show');
  
  // Reiniciar autom√°ticamente el juego
  setTimeout(() => {
    ejecutarReinicioAutomatico();
  }, 500);
}

// Funci√≥n para ejecutar reinicio autom√°tico despu√©s del juego
function ejecutarReinicioAutomatico() {
  puntuacion = 0;
  juegoIniciado = false;
  juegoTerminado = false;
  tirosRestantes = 5;
  respuestasCorrectas = 0;
  respuestasIncorrectas = 0;
  rotacionAcumulada = 0;
  actualizarPuntuacion();
  actualizarContadores();
  
  // Resetear preguntas usadas y disponibles
  preguntasUsadas = [];
  preguntasDisponibles = [...todasLasPreguntas];
  
  // Resetear botones
  document.getElementById('spin-btn').style.display = 'block';
  document.getElementById('girar-btn').style.display = 'none';
  document.getElementById('girar-btn').disabled = false;
  document.getElementById('girar-btn').textContent = 'üéØ ¬°GIRAR RULETA!';
  
  // Resetear ruleta a posici√≥n inicial
  document.getElementById('wheel').style.transform = 'rotate(0deg)';
  actualizarRuleta();
  
  console.log('üîÑ Juego reiniciado autom√°ticamente despu√©s de finalizar');
}

// Funci√≥n para reiniciar juego (ahora recarga la p√°gina)
function reiniciarJuego() {
  // Mostrar confirmaci√≥n antes de recargar
  if (confirm('¬øEst√°s seguro de que quieres reiniciar? Se recargar√° la p√°gina y se perder√° todo el progreso.')) {
    location.reload();
  }
}

// Inicializaci√≥n
document.addEventListener('DOMContentLoaded', function() {
  actualizarPuntuacion();
  actualizarContadores();
  actualizarRuleta();
  console.log('üå¥ Trivia Fundaci√≥n Guaicaramo iniciada');
  console.log('üìö Preguntas disponibles:', todasLasPreguntas.length);
});
